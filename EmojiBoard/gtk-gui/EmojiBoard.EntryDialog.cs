
// This file has been generated by the GUI designer. Do not modify.
namespace EmojiBoard
{
	public partial class EntryDialog
	{
		private global::Gtk.VBox vbox3;

		private global::Gtk.ScrolledWindow GtkScrolledWindow;

		private global::Gtk.TreeView EmojiView;

		private global::Gtk.Entry TextEntry;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget EmojiBoard.EntryDialog
			this.Name = "EmojiBoard.EntryDialog";
			this.Title = global::Mono.Unix.Catalog.GetString("EntryDialog");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child EmojiBoard.EntryDialog.Gtk.Container+ContainerChild
			this.vbox3 = new global::Gtk.VBox();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.EmojiView = new global::Gtk.TreeView();
			this.EmojiView.CanFocus = true;
			this.EmojiView.Name = "EmojiView";
			this.EmojiView.HeadersVisible = false;
			this.GtkScrolledWindow.Add(this.EmojiView);
			this.vbox3.Add(this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.GtkScrolledWindow]));
			w2.Position = 0;
			// Container child vbox3.Gtk.Box+BoxChild
			this.TextEntry = new global::Gtk.Entry();
			this.TextEntry.CanFocus = true;
			this.TextEntry.Name = "TextEntry";
			this.TextEntry.IsEditable = true;
			this.TextEntry.InvisibleChar = '‚óè';
			this.vbox3.Add(this.TextEntry);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.TextEntry]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			this.Add(this.vbox3);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.DefaultWidth = 400;
			this.DefaultHeight = 300;
			this.Show();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
			this.EmojiView.RowActivated += new global::Gtk.RowActivatedHandler(this.OnRowActivated);
			this.TextEntry.Activated += new global::System.EventHandler(this.OnTextEntryActivated);
			this.TextEntry.Changed += new global::System.EventHandler(this.OnTextEntryChanged);
		}
	}
}
